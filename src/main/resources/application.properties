
#프로퍼티 우선 순위
# 각 단계는 위에 있는 방법으로 overriding 가능
#1. 유저 홈 디렉토리에 있는 spring-boot-dev-tools.properties ~
#2. 테스트에 있는 @TestPropertySource
#3. @SpringBootTest 애노테이션의 properties 애트리뷰트
#4. 커맨드 라인 아규먼트
#5. SPRING_APPLICATION_JSON (환경 변수 또는 시스템 프로티) 에 들어있는 프로퍼티
#6. ServletConfig 파라미터
#7. ServletContext 파라미터
#8. java:comp/env JNDI 애트리뷰트
#9. System.getProperties() 자바 시스템 프로퍼티
#10. OS 환경 변수
#11. RandomValuePropertySource
#12. JAR 밖에 있는 특정 프로파일용 application properties
#13. JAR 안에 있는 특정 프로파일용 application properties
#14. JAR 밖에 있는 application properties
#15. JAR 안에 있는 application properties
#16. @PropertySource
#17. 기본 프로퍼티 (SpringApplication.setDefaultProperties)

#application.properties 우선 순위 (높은게 낮은걸 덮어 씁니다.)
#1. file:./config/ #프로젝트 root 위치 /config 디렉토리 밑에 jar 파일일 경우 jar 파일 실행하는 위치
#2. file:./
#3. classpath:/config/
#4. classpath:/

# 에플리케이션 설정 파일
# spring boot가 자동으로 로딩하는 파일 이름
# key value 형태로 규정하고 애플리케이션에서 참조 가능
seo.name = junghan
# random 방법
seo.age = ${random.int};
# holomen 파일 application.properties 설정
# 테스트
# bean에서 특정 값 바꾸고 싶을 때
holomen.name = test
#캐멀 케이스 가능 또는 - 가능
holomen.how-long =33
#spring web application 사용 x
#spring.main.web-application-type=none
#포트 변경
#server.port = 7070 # 0 일경우 random port
# 응답 압축해서 보내기 text/html, text/xml, text/plain, text/css
#server.compression.enabled=true

# https 사용하기
# 인증서 만들기 keytool.exe -genkey -alias spring -storetype PKCS12 -keyalg RSA -keysize 2048 -keystore keystore.p12 -validity 4000
# spring boot 커넥터 1개만 등록 그 커넥터에 ssl 제공, 앞으로 모든 요청은 https
# 서버에 요청을 보냈을 때 서버가 인증서를 보내는데 브라우저는 인증서의 public key를 모름 공인된 사이트에서 발급 되지않은 것
server.ssl.key-store=classpath:keystore.p12
server.ssl.key-store-type=PKCS12
server.ssl.key-store-password=123456
server.ssl.key-alias=spring
server.port = 8443
#http2 사용법
#undertow는 서버 마다 다름 https 적용되어 있으면 추가 설정 x
#tomcat 9에서는 아무설정 x
server.http2.enabled=true

#simple properties

simple.age = ${random.int(1,100)}
simple.name = testbean
simple.full = ${name} full
#25s 도 가능
simple.sessiontime = 25

#활성화할 bean의 properties 설정 
spring.profiles.active=prod

#로그 디렉토리
logging.file.path = logs
#로그 파일 이름
#logging.file.name
# 로깅할 대상 선택 및 레벨 선택 아래의 경우 패키지
logging.level.com.example.springbootstudy2 =DEBUG

#h2 콘솔 사용법
spring.h2.console.enabled=true

#h2 url 고정
#spring.datasource.generate-unique-name=false
